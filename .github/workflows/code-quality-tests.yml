name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  format-and-test:
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Generate Code
        id: generate_code
        run: |
          chmod +x ./scripts/generate_code.sh
          ./scripts/generate_code.sh
          # Check if files were generated properly
          if [ ! -f "./example/lib/src/features/counter/counter_model.freezed.dart" ] || [ ! -f "./example/lib/src/core/injection.config.dart" ]; then
            echo "Code generation failed - required files are missing"
            exit 1
          fi

      # Main project checks
      - name: Check format errors (main)
        run: dart format --set-exit-if-changed .

      - name: Check lint errors (main)
        run: flutter analyze .

      - name: Run tests (main)
        run: flutter test --coverage --test-randomize-ordering-seed random

      - name: Check coverage (main)
        uses: VeryGoodOpenSource/very_good_coverage@v2.2.0
        with:
          min_coverage: 80

      # Example folder checks
      - name: Check format errors (example)
        working-directory: ./example
        run: dart format --set-exit-if-changed .

      - name: Check lint errors (example)
        working-directory: ./example
        run: flutter analyze .

      - name: Run tests (example)
        working-directory: ./example
        run: flutter test --coverage

      - name: Check coverage (example)
        uses: VeryGoodOpenSource/very_good_coverage@v2.2.0
        with:
          path: ./example/coverage/lcov.info
          min_coverage: 80
